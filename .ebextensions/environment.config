option_settings:
  aws:ec2:instances:
    InstanceTypes: t2.micro
  # aws:elasticbeanstalk:customoption:
  #   BlockedHost1: 'exampletoblock.com'
  aws:elasticbeanstalk:environment:
    EnvironmentType: LoadBalanced
    LoadBalancerType: application
  aws:elasticbeanstalk:environment:process:default:
    DeregistrationDelay: '20'
    HealthCheckInterval: '15'
    HealthCheckPath: /health
    HealthCheckTimeout: '5'
    HealthyThresholdCount: '3'
    MatcherHTTPCode: 200
    Port: '80'
    Protocol: HTTP
    StickinessEnabled: 'true'
    StickinessLBCookieDuration: '86400'
    StickinessType: lb_cookie
    UnhealthyThresholdCount: '5'
  aws:elasticbeanstalk:environment:proxy:staticfiles:
    /assets/css: assets/css
    /assets/html: assets/html
    /assets/js: assets/js
    /assets/images: assets/images
    /assets/webfonts: assets/webfonts
Resources:
  AWSEBV2LoadBalancerListener:
    Type: 'AWS::ElasticLoadBalancingV2::Listener'
    Properties:
      DefaultActions:
        - Type: redirect
          RedirectConfig:
            Protocol: HTTPS
            Port: '443'
            Host: '#{host}'
            Path: '/#{path}'
            Query: '#{query}'
            StatusCode: HTTP_301
      LoadBalancerArn:
        Ref: AWSEBV2LoadBalancer
      Port: 80
      Protocol: HTTP

  AWSEBV2LoadBalancerListenerHTTPS:
    Type: 'AWS::ElasticLoadBalancingV2::Listener'
    Properties:
      Certificates:
        - CertificateArn: arn:aws:acm:us-east-1:848046273281:certificate/5133bb3e-1ee2-4e5c-81a8-f07dc1add911
      DefaultActions:
        - Type: forward
          TargetGroupArn:
            Ref: AWSEBV2LoadBalancerTargetGroup
      LoadBalancerArn:
        Ref: AWSEBV2LoadBalancer
      Port: 443
      Protocol: HTTPS

  # BlockedHostnames:
  #   Type: "AWS::WAFv2::RegexPatternSet"
  #   Properties:
  #     Description: 'List of Hostnames to be block by WebACL'
  #     Name: BlockedHostsSet
  #     RegularExpressionList:
  #       - { "Fn::GetOptionSetting" : {"OptionName" : "BlockedHost1" }}
  #     Scope: REGIONAL

  WafAcl:
    Type: "AWS::WAFv2::WebACL"
    Properties:
      Description: "Web ACL to Block malicious requests on AWSEBV2LoadBalancer"
      Name: "BlockRequestsACL"
      Scope: REGIONAL
      DefaultAction:
        Allow: {}
      VisibilityConfig:
        SampledRequestsEnabled: true
        CloudWatchMetricsEnabled: true
        MetricName: BlockRequestsACLMetric
      Rules:
        - Name: BlockXssAttack
          Priority: 0
          Action:
            Block: {}
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: BlockXssAttackMetric
          Statement:
            XssMatchStatement:
              FieldToMatch:
                AllQueryArguments: {}
              TextTransformations:
                - Priority: 1
                  Type: NONE
        # - Name: BlockedQueryParamsRule
        #   Priority: 1
        #   Action:
        #     Block: {}
        #   VisibilityConfig:
        #     SampledRequestsEnabled: true
        #     CloudWatchMetricsEnabled: true
        #     MetricName: UnknownHostRule1
        #   Statement:
        #     RegexPatternSetReferenceStatement:
        #       Arn: '`{ "Fn::GetAtt" : ["BlockedHostnames", "Arn" ]}`'
        #       FieldToMatch:
        #         SingleHeader:
        #           Name: Host
        #       TextTransformations:
        #         - Priority: 0
        #           Type: NONE

  WebACLAssociation:
    Type: AWS::WAFv2::WebACLAssociation
    Properties:
      ResourceArn: '`{ "Ref" : "AWSEBV2LoadBalancer" }`'
      WebACLArn: '`{ "Fn::GetAtt" : ["WafAcl", "Arn" ]}`'
