option_settings:
  aws:ec2:instances:
    InstanceTypes: t2.micro
  aws:elasticbeanstalk:environment:
    EnvironmentType: LoadBalanced
    LoadBalancerType: application
  aws:elasticbeanstalk:environment:process:default:
    DeregistrationDelay: '20'
    HealthCheckInterval: '15'
    HealthCheckPath: /health
    HealthCheckTimeout: '5'
    HealthyThresholdCount: '3'
    MatcherHTTPCode: 200
    Port: '80'
    Protocol: HTTP
    StickinessEnabled: 'true'
    StickinessLBCookieDuration: '86400'
    StickinessType: lb_cookie
    UnhealthyThresholdCount: '5'
  aws:elasticbeanstalk:environment:proxy:staticfiles:
    /assets/css: assets/css
    /assets/html: assets/html
    /assets/js: assets/js
    /assets/images: assets/images
    /assets/webfonts: assets/webfonts
  aws:elasticbeanstalk:managedactions:
    ManagedActionsEnabled: true
    PreferredStartTime: "Sun:06:00"
  aws:elasticbeanstalk:managedactions:platformupdate:
    UpdateLevel: minor
    InstanceRefreshEnabled: false
Resources:
  AWSEBV2LoadBalancerListener:
    Type: 'AWS::ElasticLoadBalancingV2::Listener'
    Properties:
      DefaultActions:
        - Type: redirect
          RedirectConfig:
            Protocol: HTTPS
            Port: '443'
            Host: '#{host}'
            Path: '/#{path}'
            Query: '#{query}'
            StatusCode: HTTP_301
      LoadBalancerArn:
        Ref: AWSEBV2LoadBalancer
      Port: 80
      Protocol: HTTP

  AWSEBV2LoadBalancerListenerHTTPS:
    Type: 'AWS::ElasticLoadBalancingV2::Listener'
    Properties:
      Certificates:
        - CertificateArn: arn:aws:acm:us-east-1:848046273281:certificate/5133bb3e-1ee2-4e5c-81a8-f07dc1add911
      DefaultActions:
        - Type: forward
          TargetGroupArn:
            Ref: AWSEBV2LoadBalancerTargetGroup
      LoadBalancerArn:
        Ref: AWSEBV2LoadBalancer
      Port: 443
      Protocol: HTTPS

  BadRequestsACL:
    Type: 'AWS::WAFv2::WebACL'
    Properties:
      Description: Web ACL to Block malicious requests on AWSEBV2LoadBalancer
      Name: BadRequestsACL
      Scope: REGIONAL
      DefaultAction:
        Block: {}
      VisibilityConfig:
        SampledRequestsEnabled: true
        CloudWatchMetricsEnabled: true
        MetricName: BadRequestsACL
      Rules:
        - Name: BlockedQueryStrings
          Priority: 0
          Action:
            Block: {}
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: BlockedQueryStrings
          Statement:
            RegexPatternSetReferenceStatement:
              Arn: '`{ "Fn::GetAtt" : ["BlockedQueryStringsRegexpSet", "Arn" ]}`'
              FieldToMatch:
                QueryString: {}
              TextTransformations:
                - Priority: 0
                  Type: "NONE"

        - Name: AllowedRoutes
          Priority: 1
          Action:
            Allow: {}
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: AllowedRoutes
          Statement:
            RegexPatternSetReferenceStatement:
              Arn: '`{ "Fn::GetAtt" : ["AllowedRoutesRegexpSet", "Arn" ]}`'
              FieldToMatch:
                UriPath: {}
              TextTransformations:
                - Priority: 0
                  Type: "NONE"

  AllowedRoutesRegexpSet:
    Type: AWS::WAFv2::RegexPatternSet
    Properties:
      Description: Allowed routes which are exposed by the server
      Name: AllowedRoutesRegexpSet
      RegularExpressionList:
        - '^\/$'
        - '^\/(about|communicate|faq|health|people|preview|question|registries|rehearsal|rsvp|schedule|subscribe|thank\-you|travel|unsubscribe)\/?$'
        - '^\/assets\/css\/(main|preview|fontawesome-all.min)\.css$'
        - '^\/assets\/css\/images\/(overlay|(dark|light)-(bl|br|tl|tr))\.(png|svg)$'
        - '^\/assets\/js\/(form|jquery\.min|main|preview|thank\-you)\.js$'
        - '^\/assets\/images\/(boardwalk|bakery|couple_(1|2|3|4|5|6|7|8|9)(_home)?|grand_hotel|sec_hotel|photographer|band|florist|maid_of_honor|bridesmaid_(1|2|3|4)|best_man|groomsman_(1|2|3|4))\.png$'
        - '^\/assets\/images\/(favicon|vintage|hemingways|friends|bride_father|bridesmaids)\.png$'
        - '^\/assets\/webfonts\/fa-(brands|regular|solid)-(4|9)00\.(eot|svg|ttf|woff2?)$'
      Scope: REGIONAL

  BlockedQueryStringsRegexpSet:
    Type: AWS::WAFv2::RegexPatternSet
    Properties:
      Description: Query strings identified as malicious
      Name: BlockedQueryStringsRegexpSet
      RegularExpressionList:
        - '^XDEBUG_SESSION_START=phpstorm$'
        - '^a=fetch&content=<php>die\(@md5\(HelloThinkCMF\)\)<\/php>$'
        - '^cmd=p2p\.cgi&-action=get$'
        - '^s=\/Index\/\\think\\app\/invokefunction&function=call_user_func_array&vars\[0]=md5&vars\[1]\[]=HelloThinkPHP$'
      Scope: REGIONAL

  WebACLAssociation:
    Type: AWS::WAFv2::WebACLAssociation
    Properties:
      ResourceArn: '`{ "Ref" : "AWSEBV2LoadBalancer" }`'
      WebACLArn: '`{ "Fn::GetAtt" : ["BadRequestsACL", "Arn" ]}`'
